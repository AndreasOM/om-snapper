name: Release Binaries

on:
  workflow_dispatch:  
  push:
    tags:
      - "*-alpha"

jobs:
  create_release:
    permissions:
      contents: write
    name: Create Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Prepare Variables
        run: |
          app_version=$(grep version Cargo.toml|cut -d"\"" -f2|head -n 1)
          echo "APP_VERSION=${app_version}" >> $GITHUB_ENV

      - name: Create DRAFT Release
        run: |
          gh release create ${{ env.APP_VERSION }} --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Summary
        run: |
          echo "| APP_VERSION  | ${{ env.APP_VERSION }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :----------- | ---------------------: |" >> $GITHUB_STEP_SUMMARY

  release_binaries:
    name: Release Binaries
    needs: create_release
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            package_prefix: om-snapper-linux
          - os: macos-11
            package_prefix: om-snapper-macos
          - os: windows-latest
            package_prefix: om-snapper-windows

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Prepare Variables
        run: |
          app_version=$(grep version Cargo.toml|cut -d"\"" -f2|head -n 1)
          echo "APP_VERSION=${app_version}" >> $GITHUB_ENV

      - name: Install Stable rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Create Distribution
        run: |
          dist_dir="${{ runner.temp }}/dist/${{ matrix.package_prefix}}"
          mkdir -p ${dist_dir}
          cp target/release/om-snapper ${dist_dir}
          cd ${dist_dir}
          pwd
          ls
          cd ..
          pwd
          ls -l
          ls -l ${{ matrix.package_prefix}}/*
          tar czf ${{ matrix.package_prefix}}-${{ env.APP_VERSION }}.tgz ${{ matrix.package_prefix}}/*
          ls -l

      - name: Upload to Release
        run: |
          dist_dir="${{ runner.temp }}/dist/${{ matrix.package_prefix}}"
          gh release upload ${{ env.APP_VERSION }} ${dist_dir}/../${{ matrix.package_prefix}}-${{ env.APP_VERSION }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Summary
        run: |
          echo "| APP_VERSION  | ${{ env.APP_VERSION }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :----------- | ---------------------: |" >> $GITHUB_STEP_SUMMARY

  release_release:
    permissions:
      contents: write
    name: Release Release
    needs: release_binaries
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Prepare Variables
        run: |
          app_version=$(grep version Cargo.toml|cut -d"\"" -f2|head -n 1)
          echo "APP_VERSION=${app_version}" >> $GITHUB_ENV

      - name: Create Release
        run: |
          gh release edit ${{ env.APP_VERSION }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Summary
        run: |
          echo "| APP_VERSION  | ${{ env.APP_VERSION }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :----------- | ---------------------: |" >> $GITHUB_STEP_SUMMARY
